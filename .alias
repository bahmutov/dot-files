# Easier navigation: .., ..., ~ and -
alias ..="cd .."
alias cd..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"

# programs

# link installed sublime to user local bin folder (once) to run it like `subl`
# sudo ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl
alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
alias chromef="chrome --allow-file-access-from-files"

# Grunt shortcuts
alias gk="grunt karma"
alias gw="grunt watch --no-quiet --no-eslint"

# Git shortcuts
alias g="git"
alias undopush="git push -f origin HEAD^:master"
alias gc="git clone"
alias st="git st"
alias gp="git pull"

# a couple of extra git aliases take from
# https://news.ycombinator.com/item?id=8872334
# better logs
alias logo="git log --oneline --graph --all --decorate"
alias logg="git log --graph --all --decorate"
# log just tagged commits
alias logt="git log --date-order --graph --tags --simplify-by-decoration --pretty=format:'%ai %h %C(Yellow)%d%Creset'"
# lists ignored files
alias ignored="git ls-files --others -i --exclude-standard"

# phabricator / arcanist shortcuts
alias ab="arc branch"
alias al="arc land"
# Use commit message verbatim and just add reviewers
alias ad="arc diff --verbatim --reviewers"

# Gitjk - git undo
# https://github.com/mapmeld/gitjk
alias gitjk="history 10 | tail -r | gitjk_cmd"

# global npm install
alias NPM="sudo npm install -g"

# running node with all ES6
alias harm="node --harmony"

# File size
alias fs="stat -f \"%z bytes\""

# make new folder and cd in it right away
# requires using arguments
function md() {
    mkdir $1 && cd $1;
}

# `cat` with beautiful colors. requires Pygments installed.
# sudo easy_install Pygments
alias c='pygmentize -O style=monokai -f console256 -g'

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
else # OS X `ls`
	colorflag="-G"
fi

# List all files colorized in long format
alias l="ls -l ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -la ${colorflag}"

# list git branches with their descriptions

function branches() {
  branch=""
  branches=`git branch --list`

  # requires git > v.1.7.9

  # you can set branch's description using command
  # git branch --edit-description
  # this opens the configured text editor, enter message, save and exit
  # if one editor does not work (for example Sublime does not work for me)
  # try another one, like vi

  # you can see branch's description using
  # git config branch.<branch name>.description

  while read -r branch; do
    # git marks current branch with "* ", remove it
    clean_branch_name=${branch//\*\ /}
    description=`git config branch.$clean_branch_name.description`
    printf "%-15s %s\n" "$branch" "$description"
  done <<< "$branches"

  # example output
  # $ ./branches.sh
  # * master        this is master branch
  # one             this is simple branch for testing
}
